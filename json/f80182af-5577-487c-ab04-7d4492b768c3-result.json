{"name": "test_secondlevel[getData3]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_second_level.TestSecondLevel object at 0x7feb002dce50>\ngetData = {'data': {'csid': 'q', 'page': 'r'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7feb20319e10>\nresult = <Response [400]>, statusCode = '200', errorCode = '400', msg = '参数类型错误'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "28d89362-549f-4ae1-80e0-0b6b3d5e036c-attachment.attach"}, {"name": "请求方式", "source": "92081f24-913f-4f26-b880-6a6e8bab43d4-attachment.attach"}, {"name": "请求头", "source": "442c06d2-1b04-4e38-95e4-b699b42560fa-attachment.attach"}, {"name": "请求体", "source": "4279227e-9c1c-4d2b-8dde-fbc5748a1398-attachment.attach"}], "start": 1657986031850, "stop": 1657986031851}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "11792b1e-3a99-4f52-a799-37f13c9d711a-attachment.attach"}, {"name": "响应头", "source": "3e0a4188-2e11-488c-a8a3-7224eea088d8-attachment.attach"}, {"name": "响应文本", "source": "e7c98d27-8c5f-463e-aae3-b6ce2fe738de-attachment.attach"}], "start": 1657986031851, "stop": 1657986031852}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "b0ac191a-e527-43bb-ab16-c4e65888ba79-attachment.attach"}, {"name": "预期返回错误码 status", "source": "ddee92f6-b162-438e-b1c9-4a00d1bf956c-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "12288343-c3c5-4477-9bef-fc249675b15d-attachment.attach"}], "start": 1657986031852, "stop": 1657986031852}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': 'q', 'page': 'r'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '参数类型错误'}}"}], "start": 1657986031721, "stop": 1657986031852, "uuid": "b1ba693a-f17a-4cef-9b60-96403f4135fd", "historyId": "fd745784a88584f0de8f3a75025924a9", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "feature", "value": "商品信息"}, {"name": "story", "value": "二级分页接口"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "84790-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}