{"name": "test_secondlevel[getData2]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_second_level.TestSecondLevel object at 0x7fb440c02d10>\ngetData = {'data': {'csid': '3', 'page': '0'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fb440bf0190>\nresult = <Response [500]>, statusCode = '200', errorCode = '400'\nmsg = '当前page存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "9f13bcd3-175a-472e-8b8e-dd47e816ec93-attachment.attach"}, {"name": "请求方式", "source": "5fbbd838-4349-41af-98fa-95fb4614da9a-attachment.attach"}, {"name": "请求头", "source": "8ce838c3-45e8-45a6-9e36-6f6f880cd512-attachment.attach"}, {"name": "请求体", "source": "0655be5d-fcf2-4c5c-bfe6-b4ef5170df57-attachment.attach"}], "start": 1658062603447, "stop": 1658062603448}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "4eddb36c-2500-4bf1-8fbc-db64eac3bdfe-attachment.attach"}, {"name": "响应头", "source": "1c0fef2c-2699-4549-a410-3347d4665e9a-attachment.attach"}, {"name": "响应文本", "source": "2f328ba3-46c4-425a-96dc-1b23c899ac7b-attachment.attach"}], "start": 1658062603448, "stop": 1658062603448}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "511b3056-a444-4e37-b13f-082f0b25ad33-attachment.attach"}, {"name": "预期返回错误码 status", "source": "0d64737f-47fd-421f-81b6-bedc869c505e-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "10085366-603c-4a7b-a37e-8c3d0adcbe4c-attachment.attach"}], "start": 1658062603448, "stop": 1658062603449}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '3', 'page': '0'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前page存在问题'}}"}], "start": 1658062603302, "stop": 1658062603449, "uuid": "c01a8e09-f5c4-4305-bd1d-e29fe030350b", "historyId": "9cf61cbe411484f9bd567b481300776c", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "8322-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}