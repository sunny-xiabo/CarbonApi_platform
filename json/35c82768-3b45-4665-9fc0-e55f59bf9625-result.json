{"name": "test_login[getData3]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x7feb204ade90>\ngetData = {'data': {'password': '12345', 'username': 'xxxx'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('登录接口')\n    def test_login(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_login.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7feb20322950>\nresult = <Response [200]>, statusCode = '200', errorCode = '400', msg = '用户名不存在'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n            assert result.status_code == int(statusCode)\n            assert result.json()['status'] == int(errorCode)\n>           assert result.json()['msg'] == msg\nE           AssertionError\n\n../utils/requestUtil.py:104: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "64303b16-5a00-4d26-8335-717834eb9737-attachment.attach"}, {"name": "请求方式", "source": "388a7477-f36a-45b2-8515-cdf0191ae853-attachment.attach"}, {"name": "请求头", "source": "c9a1a064-b0d8-4ee6-a25a-a13c87815926-attachment.attach"}, {"name": "请求体", "source": "1e405057-771e-4358-b8af-f1312218dd8b-attachment.attach"}], "start": 1657986031134, "stop": 1657986031135}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "c5816a8d-f195-4e51-a1c7-2d03e09bb98e-attachment.attach"}, {"name": "响应头", "source": "0785f8be-69d9-4cb4-a99b-02c4d2115173-attachment.attach"}, {"name": "响应文本", "source": "ba9b346c-7201-493e-bace-d74ac5c2ab5a-attachment.attach"}], "start": 1657986031135, "stop": 1657986031135}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 104, in assertResult\n    assert result.json()['msg'] == msg\n"}, "attachments": [{"name": "预期响应状态码", "source": "1b5df0b7-7aa8-4c8d-9d67-32a01f9cc7b9-attachment.attach"}, {"name": "预期返回错误码 status", "source": "8e079b3e-d090-4a46-817f-ad1392c2e073-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "3d45f0d2-8a88-448f-86a7-f55a85a15c7f-attachment.attach"}], "start": 1657986031135, "stop": 1657986031136}], "parameters": [{"name": "getData", "value": "{'name': 'login', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mlogin', 'headers': None, 'params': None, 'data': {'username': 'xxxx', 'password': '12345'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '用户名不存在'}}"}], "start": 1657986031042, "stop": 1657986031136, "uuid": "88e90b54-dc4a-461d-a9ad-fa29d4ca3891", "historyId": "ca7fdac4a01e0b4fed33c8d57157b744", "testCaseId": "c1469246359ab4f6b8f59bb9203392dc", "fullName": "test_cases.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "用户"}, {"name": "story", "value": "登录接口"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "84790-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_login"}]}