{"name": "test_secondlevel[getData2]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.test_second_level.TestSecondLevel object at 0x7fc0e8938510>\ngetData = {'data': {'csid': '3', 'page': '0'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fc0e02613d0>\nresult = <Response [500]>, statusCode = '200', errorCode = '400'\nmsg = '当前page存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == statusCode\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "4915edbe-482a-4cc1-96e8-b626ac83e15f-attachment.attach"}, {"name": "请求方式", "source": "9689081a-3b1f-454d-b389-d6ee537f09b6-attachment.attach"}, {"name": "请求头", "source": "6e2c046d-aec8-4ac3-b9b2-6b93ab09cfdc-attachment.attach"}, {"name": "请求体", "source": "a676f83a-7609-4fb8-a9a3-0b65bccf4fcc-attachment.attach"}], "start": 1657960346134, "stop": 1657960346134}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "5886d87d-1b07-4813-8425-e959c27be497-attachment.attach"}, {"name": "响应头", "source": "a5960e92-1eaf-4a06-a231-fc0728f837c2-attachment.attach"}, {"name": "响应文本", "source": "49a54be7-db1b-489d-9656-bf9ce79df557-attachment.attach"}], "start": 1657960346134, "stop": 1657960346135}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == statusCode\n"}, "attachments": [{"name": "预期响应状态码", "source": "a570b544-75a9-40a1-a120-722ae887c6b9-attachment.attach"}, {"name": "预期返回错误码 status", "source": "869b1caa-0c82-44c5-9e31-49ed6c4a72ca-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "21c0ba85-2cdd-4aab-a47d-087c822e407e-attachment.attach"}], "start": 1657960346135, "stop": 1657960346137}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '3', 'page': '0'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前page存在问题'}}"}], "start": 1657960345984, "stop": 1657960346137, "uuid": "285019a1-d6f9-4aca-aad7-511e5beb6b93", "historyId": "9cf61cbe411484f9bd567b481300776c", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "75561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}