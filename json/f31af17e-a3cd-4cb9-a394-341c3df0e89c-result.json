{"name": "test_login[getData3]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x7fb440b8e490>\ngetData = {'data': {'password': '12345', 'username': 'xxxx'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('登录接口')\n    def test_login(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_login.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fb440712910>\nresult = <Response [200]>, statusCode = '200', errorCode = '400', msg = '用户名不存在'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n            assert result.status_code == int(statusCode)\n            assert result.json()['status'] == int(errorCode)\n>           assert result.json()['msg'] == msg\nE           AssertionError\n\n../utils/requestUtil.py:104: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "f2e39bfb-44c3-4e68-9c2e-977e8cbb6131-attachment.attach"}, {"name": "请求方式", "source": "7e4f4460-ebca-4cd0-97ff-f286cf940d94-attachment.attach"}, {"name": "请求头", "source": "5567559f-4fa8-4cd2-9ac2-514babf17a3a-attachment.attach"}, {"name": "请求体", "source": "783dbb8c-3b62-47bd-87bd-531a51402696-attachment.attach"}], "start": 1658062602466, "stop": 1658062602467}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "07f146ff-c374-4068-9da0-cc5d2c1e020d-attachment.attach"}, {"name": "响应头", "source": "aced27eb-3794-4a08-8f28-8d9999db5f41-attachment.attach"}, {"name": "响应文本", "source": "6de30b3f-af8d-4ded-a0b0-71670c231c50-attachment.attach"}], "start": 1658062602467, "stop": 1658062602467}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 104, in assertResult\n    assert result.json()['msg'] == msg\n"}, "attachments": [{"name": "预期响应状态码", "source": "fbcb1ee1-2acd-4850-956c-a22b4fc5698c-attachment.attach"}, {"name": "预期返回错误码 status", "source": "197dddb8-7437-4bdf-b322-d33f2fbf2fbd-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "9e1d65c6-ab0a-4163-80f6-5ff2127af936-attachment.attach"}], "start": 1658062602467, "stop": 1658062602467}], "parameters": [{"name": "getData", "value": "{'name': 'login', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mlogin', 'headers': None, 'params': None, 'data': {'username': 'xxxx', 'password': '12345'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '用户名不存在'}}"}], "start": 1658062602365, "stop": 1658062602468, "uuid": "24088b37-f7bf-46f2-a2a5-1cd6b88775ed", "historyId": "ca7fdac4a01e0b4fed33c8d57157b744", "testCaseId": "c1469246359ab4f6b8f59bb9203392dc", "fullName": "test_cases.test_login.TestLogin#test_login", "labels": [{"name": "story", "value": "登录接口"}, {"name": "feature", "value": "用户"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "8322-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_login"}]}