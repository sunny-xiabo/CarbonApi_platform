{"name": "test_secondlevel[getData0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.test_second_level.TestSecondLevel object at 0x7fc0e8937990>\ngetData = {'data': {'csid': '1', 'page': '1'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fc0e02613d0>\nresult = <Response [500]>, statusCode = '200', errorCode = '200'\nmsg = 'success'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == statusCode\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "020a02f4-5b02-4d47-9624-236f1446ea01-attachment.attach"}, {"name": "请求方式", "source": "f770120d-9e50-4eab-b67d-6ecb242493f5-attachment.attach"}, {"name": "请求头", "source": "288e78ea-bdf7-4d94-b87b-e527b4f108d9-attachment.attach"}, {"name": "请求体", "source": "9468293d-917b-4e33-82eb-c8af1df42dcd-attachment.attach"}], "start": 1657960345779, "stop": 1657960345780}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "92dfed91-1e85-45ab-92b7-c94669700650-attachment.attach"}, {"name": "响应头", "source": "61c5d2eb-0280-45d6-b6d6-0b680f80781e-attachment.attach"}, {"name": "响应文本", "source": "1d9744d6-bb53-45df-825f-4ea5127a067f-attachment.attach"}], "start": 1657960345780, "stop": 1657960345781}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == statusCode\n"}, "attachments": [{"name": "预期响应状态码", "source": "63bb8652-03fa-43b9-afbc-54e2af2ea121-attachment.attach"}, {"name": "预期返回错误码 status", "source": "377b6547-f879-4db6-abbf-0db9f651d514-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "52aabf3f-c301-47e0-bc6a-efed67c5fb8b-attachment.attach"}], "start": 1657960345781, "stop": 1657960345782}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '1', 'page': '1'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '200', 'msg': 'success'}}"}], "start": 1657960345153, "stop": 1657960345783, "uuid": "25627586-64a0-4b63-ae10-4f2d27d3c56b", "historyId": "3a85665736f13f644f686d3ad3acdd1e", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "75561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}