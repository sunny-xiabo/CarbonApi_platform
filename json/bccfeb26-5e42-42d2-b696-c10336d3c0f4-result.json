{"name": "test_scene_02", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_scene.TestScene object at 0x7f9248d2c190>\n\n    @allure.story('场景测试02')\n    def test_scene_02(self):\n        ru = RequestUtil()\n        cjru = SceneRequestUtil('scene_02', ru)\n>       cjru.yamlAndRequest()\n\n../test_cases/test_scene.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../utils/SceneRequestUtil.py:76: in yamlAndRequest\n    dict['validate']['msg'])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7f926861d9d0>\nresult = <Response [200]>, statusCode = 200, errorCode = 400, msg = '用户名已存在'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n            assert result.status_code == int(statusCode)\n>           assert result.json()['status'] == int(errorCode)\nE           AssertionError\n\n../utils/requestUtil.py:103: AssertionError"}, "steps": [{"name": "请求接口：mcheckImg", "status": "passed", "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "96cf59f4-3fdc-4fc8-9e51-a3da03466cc3-attachment.attach"}, {"name": "请求方式", "source": "25c164fd-1807-4e32-8157-d35435196c45-attachment.attach"}, {"name": "请求头", "source": "f9abf31e-6cd9-4a4f-b66e-f57c9b0196d2-attachment.attach"}, {"name": "请求体", "source": "8ac805da-b21e-4924-8dc2-23303706d003-attachment.attach"}], "start": 1658110712429, "stop": 1658110712430}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "a965a99c-a846-4c87-a360-7184e1be2609-attachment.attach"}, {"name": "响应头", "source": "895bc9bc-db89-4270-9a7d-e236eacc01fd-attachment.attach"}, {"name": "响应文本", "source": "c261a50e-b9de-4337-b2ff-1eec660cb4ac-attachment.attach"}], "start": 1658110712430, "stop": 1658110712430}, {"name": "断言", "status": "passed", "attachments": [{"name": "预期响应状态码", "source": "40381c0e-3d7c-42d3-9a56-1395e4a78c1c-attachment.attach"}, {"name": "预期返回错误码 status", "source": "90b0f6f1-473e-4c67-8c19-e427850f27f5-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "7859fa8d-0ed3-40eb-b5f5-3f6a5e7b609f-attachment.attach"}], "start": 1658110712430, "stop": 1658110712431}], "start": 1658110712325, "stop": 1658110712460}, {"name": "请求接口：mregist", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/SceneRequestUtil.py\", line 76, in yamlAndRequest\n    dict['validate']['msg'])\n  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 103, in assertResult\n    assert result.json()['status'] == int(errorCode)\n"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "c79c367b-671b-418d-ab60-1fd03f737b37-attachment.attach"}, {"name": "请求方式", "source": "6a8c7277-b6ef-4bee-bdc6-2b61ea02c1c4-attachment.attach"}, {"name": "请求头", "source": "16a463d4-7516-4380-a555-dd54c14b487a-attachment.attach"}, {"name": "请求体", "source": "78625830-5053-40cc-bd32-0d7bb719b6b7-attachment.attach"}], "start": 1658110712555, "stop": 1658110712556}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "48b28262-92b1-4e87-8973-cf1c464c591e-attachment.attach"}, {"name": "响应头", "source": "79a0eb65-ca7d-47ff-8a01-e908b2d45108-attachment.attach"}, {"name": "响应文本", "source": "bfc483d2-0f04-4827-babb-f6638a9794b4-attachment.attach"}], "start": 1658110712556, "stop": 1658110712556}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 103, in assertResult\n    assert result.json()['status'] == int(errorCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "c1477107-b1c3-42a8-a675-c779b7892c53-attachment.attach"}, {"name": "预期返回错误码 status", "source": "681d8bf8-fc4f-405e-8ef0-78cc63da5d64-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "4e9f235b-45b5-4c52-826a-3afcdd197dbd-attachment.attach"}], "start": 1658110712556, "stop": 1658110712557}], "start": 1658110712460, "stop": 1658110712557}], "start": 1658110712314, "stop": 1658110712558, "uuid": "45f6256d-54ae-420b-8b42-473faeeac4c3", "historyId": "fd829e5902ac878cab70e5d85f09e59c", "testCaseId": "eb37af781c52139cdd067a3f8044335d", "fullName": "test_cases.test_scene.TestScene#test_scene_02", "labels": [{"name": "story", "value": "场景测试02"}, {"name": "feature", "value": "场景"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_scene"}, {"name": "subSuite", "value": "TestScene"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "9086-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_scene"}]}