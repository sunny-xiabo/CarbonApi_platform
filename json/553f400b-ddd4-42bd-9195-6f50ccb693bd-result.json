{"name": "test_secondlevel[getData3]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_second_level.TestSecondLevel object at 0x7f9248d43650>\ngetData = {'data': {'csid': 'q', 'page': 'r'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7f9248d34a50>\nresult = <Response [400]>, statusCode = '200', errorCode = '400', msg = '参数类型错误'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "80189613-4b1f-428f-8340-d887969e2606-attachment.attach"}, {"name": "请求方式", "source": "60f9068e-d64a-4933-9576-54b0d74c3293-attachment.attach"}, {"name": "请求头", "source": "66e10706-2195-494f-b4f9-18b5b40d05df-attachment.attach"}, {"name": "请求体", "source": "98d934ed-d9d2-45ba-91c3-34ca1cfe55bf-attachment.attach"}], "start": 1658110713170, "stop": 1658110713171}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "6c245b49-3bde-4c64-be57-47366ee12223-attachment.attach"}, {"name": "响应头", "source": "a4d2a3f7-b26e-4d04-8374-5e50b90cf956-attachment.attach"}, {"name": "响应文本", "source": "234754d0-8b62-4f9c-bf15-4f09fde0656b-attachment.attach"}], "start": 1658110713171, "stop": 1658110713171}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "9fbc681b-5f4e-48d6-9854-0ec664718217-attachment.attach"}, {"name": "预期返回错误码 status", "source": "b0fef3d9-7368-4365-ba77-d27ec627db53-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "e54a8083-da2e-498c-b51c-928e85e87889-attachment.attach"}], "start": 1658110713171, "stop": 1658110713172}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': 'q', 'page': 'r'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '参数类型错误'}}"}], "start": 1658110713086, "stop": 1658110713172, "uuid": "c357ff41-a351-4563-8ff5-0978db1ae46d", "historyId": "fd745784a88584f0de8f3a75025924a9", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "9086-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}