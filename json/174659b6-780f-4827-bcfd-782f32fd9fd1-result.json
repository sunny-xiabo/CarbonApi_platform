{"name": "test_login[getData0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x7f92584035d0>\ngetData = {'data': {'password': '123', 'username': 'wangwu'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('登录接口')\n    def test_login(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_login.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7f9248baaad0>\nresult = <Response [500]>, statusCode = '200', errorCode = '200'\nmsg = 'success'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "72ebd1f0-918c-456b-ae85-fd81ce2bfb01-attachment.attach"}, {"name": "请求方式", "source": "75a945f9-05ee-4587-910c-c89465c1091f-attachment.attach"}, {"name": "请求头", "source": "465d58a8-7709-405c-afb2-c2932a295595-attachment.attach"}, {"name": "请求体", "source": "7175d9ae-78a9-4714-9cf2-20b6dacbb6f3-attachment.attach"}], "start": 1658110711616, "stop": 1658110711617}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "f4f4c2af-45eb-48fb-a2a0-34adae271d37-attachment.attach"}, {"name": "响应头", "source": "d61c38ab-09d0-4ca4-83ea-5de84ac37ba2-attachment.attach"}, {"name": "响应文本", "source": "8e9626e9-a47a-47c6-b020-d67372a86a5a-attachment.attach"}], "start": 1658110711617, "stop": 1658110711618}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "e1b3cb33-d391-47a0-aa84-da8f19bb02dd-attachment.attach"}, {"name": "预期返回错误码 status", "source": "af08b866-98ef-417e-a8e5-ed862509b658-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "3ca2b6c6-45ce-4f01-8ff4-c0c1e5ed65c8-attachment.attach"}], "start": 1658110711618, "stop": 1658110711618}], "parameters": [{"name": "getData", "value": "{'name': 'login', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mlogin', 'headers': None, 'params': None, 'data': {'username': 'wangwu', 'password': '123'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '200', 'msg': 'success'}}"}], "start": 1658110711347, "stop": 1658110711619, "uuid": "2c077cfb-cd06-4557-aaf2-8f054c468df3", "historyId": "2322635ec8185d2259bab98790b913f1", "testCaseId": "c1469246359ab4f6b8f59bb9203392dc", "fullName": "test_cases.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "用户"}, {"name": "story", "value": "登录接口"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "9086-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_login"}]}