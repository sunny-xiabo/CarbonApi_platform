{"name": "test_secondlevel[getData4]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.test_second_level.TestSecondLevel object at 0x7fc0e8938cd0>\ngetData = {'data': {'csid': '1', 'page': ''}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fc0e02613d0>\nresult = <Response [400]>, statusCode = '200', errorCode = '400'\nmsg = 'page为必填项'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == statusCode\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "5b98f6f9-7b6f-4a49-a3cf-176541cbce7d-attachment.attach"}, {"name": "请求方式", "source": "ea348014-832e-4839-9b1b-8ebac140fbb3-attachment.attach"}, {"name": "请求头", "source": "c3094932-6d6b-4c04-a78f-9535229db25f-attachment.attach"}, {"name": "请求体", "source": "86e93844-241a-4e8d-9ab5-bcd6a746a56c-attachment.attach"}], "start": 1657960346424, "stop": 1657960346425}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "ad625e59-359a-42bc-a595-fb74bdc9a0e7-attachment.attach"}, {"name": "响应头", "source": "d528880e-9df7-4995-bcd0-e1bdd559ded0-attachment.attach"}, {"name": "响应文本", "source": "2e94fc73-c71d-4c55-a9b5-ba445747e113-attachment.attach"}], "start": 1657960346425, "stop": 1657960346425}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == statusCode\n"}, "attachments": [{"name": "预期响应状态码", "source": "0a7cf113-049e-4734-ae77-1be0aa849dcb-attachment.attach"}, {"name": "预期返回错误码 status", "source": "f074f96b-f345-45fd-97d4-9fc6ade46a94-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "17e38632-49f8-43e3-972c-fde88638fb61-attachment.attach"}], "start": 1657960346425, "stop": 1657960346426}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '1', 'page': ''}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': 'page为必填项'}}"}], "start": 1657960346334, "stop": 1657960346427, "uuid": "72a703cc-4428-443e-81c8-08b9932c7b61", "historyId": "eb49e8f4bfc2a99c089a7db2f7ca9b2a", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "75561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}