{"name": "test_secondlevel[getData2]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_second_level.TestSecondLevel object at 0x7f9248d43c50>\ngetData = {'data': {'csid': '3', 'page': '0'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7f9248d34a50>\nresult = <Response [500]>, statusCode = '200', errorCode = '400'\nmsg = '当前page存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "dcf45282-9b5a-4bf2-8041-97d5a727d021-attachment.attach"}, {"name": "请求方式", "source": "180bdd25-6db0-497e-b7b5-68b8c7642ce4-attachment.attach"}, {"name": "请求头", "source": "c271ab19-81b6-4121-a3b0-ed87243c4548-attachment.attach"}, {"name": "请求体", "source": "06a976ef-7be1-43ae-8fdb-6e98cbc3c650-attachment.attach"}], "start": 1658110713071, "stop": 1658110713071}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "1e62cd46-9a99-4aac-b326-f2a3a2a54ba7-attachment.attach"}, {"name": "响应头", "source": "bd82e8ab-0675-47c3-99b6-18a4b8821f55-attachment.attach"}, {"name": "响应文本", "source": "bf9d8a8c-37bf-4235-bda9-b48d08299ab6-attachment.attach"}], "start": 1658110713072, "stop": 1658110713072}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "6459f73b-9e96-43a4-9e6e-e7a22520633d-attachment.attach"}, {"name": "预期返回错误码 status", "source": "dbf5b88e-8983-4ed0-934f-8e4f08daa661-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "967ffb39-48ab-4993-a579-d8834dfe69a3-attachment.attach"}], "start": 1658110713072, "stop": 1658110713072}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '3', 'page': '0'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前page存在问题'}}"}], "start": 1658110712936, "stop": 1658110713073, "uuid": "b59a90a2-563e-4695-b01d-ba95f37443e9", "historyId": "9cf61cbe411484f9bd567b481300776c", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "9086-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}