{"name": "test_secondlevel[getData4]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_second_level.TestSecondLevel object at 0x7feb002cae90>\ngetData = {'data': {'csid': 'z', 'page': 's'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7feb20319e10>\nresult = <Response [400]>, statusCode = '200', errorCode = '400', msg = '参数类型错误'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "af08f564-ed1a-4b3d-8407-749e83239e23-attachment.attach"}, {"name": "请求方式", "source": "633ac96a-4f06-40b4-82b9-abeee37ec4e8-attachment.attach"}, {"name": "请求头", "source": "fe03b592-a43a-4f5d-810c-aba24c7c1418-attachment.attach"}, {"name": "请求体", "source": "030a89a9-dfae-4c54-836f-edafc67a13e6-attachment.attach"}], "start": 1657986031952, "stop": 1657986031953}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "de3952a1-b888-4de2-bb40-729d226c1d19-attachment.attach"}, {"name": "响应头", "source": "c91f6b5c-f204-46c8-b716-212c22b6a219-attachment.attach"}, {"name": "响应文本", "source": "adf2662a-6ea1-413c-8692-97fca5bb8d31-attachment.attach"}], "start": 1657986031953, "stop": 1657986031953}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "2d1d57f3-51f0-4b63-8ccf-03eb7123578c-attachment.attach"}, {"name": "预期返回错误码 status", "source": "4573b27b-ffaf-4919-ba5c-c3064307db1a-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "8d2dd242-dfd4-426b-8eff-e6f5ad1c1cd4-attachment.attach"}], "start": 1657986031953, "stop": 1657986031953}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': 'z', 'page': 's'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '参数类型错误'}}"}], "start": 1657986031859, "stop": 1657986031954, "uuid": "ea9fa44e-7ada-4fb2-a344-6d2e0d4227ba", "historyId": "eb49e8f4bfc2a99c089a7db2f7ca9b2a", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "feature", "value": "商品信息"}, {"name": "story", "value": "二级分页接口"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "84790-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}