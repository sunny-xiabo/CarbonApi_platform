{"name": "test_secondlevel[getData4]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_second_level.TestSecondLevel object at 0x7fb440c06cd0>\ngetData = {'data': {'csid': 'z', 'page': 's'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fb440bf0190>\nresult = <Response [400]>, statusCode = '200', errorCode = '400', msg = '参数类型错误'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == int(statusCode)\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "21d45afb-5518-4df0-82f7-f2a07545fd22-attachment.attach"}, {"name": "请求方式", "source": "77bb6e2b-1948-423f-91a4-e2d1bc1abff4-attachment.attach"}, {"name": "请求头", "source": "4719af1c-bb66-438a-bc76-52374f1f135e-attachment.attach"}, {"name": "请求体", "source": "43fb8eea-7672-496a-98e7-01ad30f00f23-attachment.attach"}], "start": 1658062603628, "stop": 1658062603629}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "9de6e3c0-b020-4c96-ab98-2d1acb587334-attachment.attach"}, {"name": "响应头", "source": "accbee4a-58f1-4e2b-a302-940854123f54-attachment.attach"}, {"name": "响应文本", "source": "b4cae804-97ef-4f60-915a-da1f12704af0-attachment.attach"}], "start": 1658062603629, "stop": 1658062603629}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == int(statusCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "fd67db34-b245-436c-9b4a-c4f68554019d-attachment.attach"}, {"name": "预期返回错误码 status", "source": "d5f60512-9101-422e-905c-ac8d32a33851-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "44ecaa2b-6103-413e-932d-ef1f4bd7c8f3-attachment.attach"}], "start": 1658062603629, "stop": 1658062603629}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': 'z', 'page': 's'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '参数类型错误'}}"}], "start": 1658062603545, "stop": 1658062603630, "uuid": "bf5f407d-dab2-4a88-bb95-0459a1d8b587", "historyId": "eb49e8f4bfc2a99c089a7db2f7ca9b2a", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "8322-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}