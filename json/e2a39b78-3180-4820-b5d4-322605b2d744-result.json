{"name": "test_secondlevel[getData6]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.test_second_level.TestSecondLevel object at 0x7fc0e8938d50>\ngetData = {'data': {'csid': 'z', 'page': 's'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_secondlevel(self, getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'], url=getData['url'], params=getData['params'],\n                              data=getData['data'], json=getData['json'], headers=getData['headers'])\n    \n        # 断言\n        ru.assertResult(result, getData['validate']['statusCode'], getData['validate']['errorCode'],\n>                       getData['validate']['msg'])\n\n../test_cases/test_second_level.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fc0e02613d0>\nresult = <Response [400]>, statusCode = '200', errorCode = '400', msg = '参数类型错误'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n>           assert result.status_code == statusCode\nE           AssertionError\n\n../utils/requestUtil.py:102: AssertionError"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "8f4f408b-e1c3-4309-8c6e-a9370f4a9448-attachment.attach"}, {"name": "请求方式", "source": "0caf8541-1e40-48a0-838d-1bbd68a28854-attachment.attach"}, {"name": "请求头", "source": "3e0224f6-9231-4b27-bcb8-b33e66f54d9e-attachment.attach"}, {"name": "请求体", "source": "65f7112f-c2df-49a4-95e9-b7c89d0ec5d9-attachment.attach"}], "start": 1657960346616, "stop": 1657960346616}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "c5c5b140-aa87-4af1-92d1-0143439a779f-attachment.attach"}, {"name": "响应头", "source": "5f51feb4-8ac3-4c31-b20e-c4439bbeba43-attachment.attach"}, {"name": "响应文本", "source": "b6b570cc-967e-49fe-816d-6be27a3094d2-attachment.attach"}], "start": 1657960346616, "stop": 1657960346617}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 102, in assertResult\n    assert result.status_code == statusCode\n"}, "attachments": [{"name": "预期响应状态码", "source": "6c93763b-a722-44e9-9491-e2664bc695ec-attachment.attach"}, {"name": "预期返回错误码 status", "source": "40e50b77-28f3-41c6-86a7-7d193532549f-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "d09c90a9-a180-43ae-8d00-c6abf2361ea6-attachment.attach"}], "start": 1657960346617, "stop": 1657960346617}], "parameters": [{"name": "getData", "value": "{'name': 'second_level', 'method': 'POST', 'url': 'http://124.223.178.186:8080/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': 'z', 'page': 's'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '参数类型错误'}}"}], "start": 1657960346528, "stop": 1657960346617, "uuid": "c2b73f57-301d-4e3d-9ec3-8d44d63ff69e", "historyId": "b93a11267133b6fc0aa48dfa748ee7a2", "testCaseId": "ad570678db19f2b9498671ff5902b23f", "fullName": "test_cases.test_second_level.TestSecondLevel#test_secondlevel", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_second_level"}, {"name": "subSuite", "value": "TestSecondLevel"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "75561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_second_level"}]}