{"name": "test_scene_02", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_scene.TestScene object at 0x7fb440be9e10>\n\n    @allure.story('场景测试02')\n    def test_scene_02(self):\n        ru = RequestUtil()\n        cjru = SceneRequestUtil('scene_02', ru)\n>       cjru.yamlAndRequest()\n\n../test_cases/test_scene.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../utils/SceneRequestUtil.py:76: in yamlAndRequest\n    dict['validate']['msg'])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requestUtil.RequestUtil object at 0x7fb440c06410>\nresult = <Response [200]>, statusCode = 200, errorCode = 400, msg = '用户名已存在'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        \"\"\"\n        断言实际接口返回数据\n        :param result:\n        :param statusCode:\n        :param errorCode:\n        :param msg:\n        :return:\n        \"\"\"\n        with allure.step('发生请求'):\n            allure.attach(str(result.url), '请求路径')\n            allure.attach(str(result.request.method), '请求方式')\n            allure.attach(str(result.request.headers), '请求头')\n            allure.attach(str(result.request.body), '请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code), '响应状态码')\n            allure.attach(str(result.headers), '响应头')\n            allure.attach(str(result.text), '响应文本')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode), '预期响应状态码')\n            allure.attach(str(errorCode), '预期返回错误码 status')\n            allure.attach(msg, '预期返回错误信息msg')\n    \n            assert result.status_code == int(statusCode)\n>           assert result.json()['status'] == int(errorCode)\nE           AssertionError\n\n../utils/requestUtil.py:103: AssertionError"}, "steps": [{"name": "请求接口：mcheckImg", "status": "passed", "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "6793d5f0-a97a-45f2-a7c9-05984ea98c5d-attachment.attach"}, {"name": "请求方式", "source": "38c128a7-b04d-4db3-bd79-016bd517f3b7-attachment.attach"}, {"name": "请求头", "source": "81295c8e-9abe-4b41-ab9b-467edfa139d5-attachment.attach"}, {"name": "请求体", "source": "820c694d-9965-457b-9860-e752f1eabf7e-attachment.attach"}], "start": 1658062602895, "stop": 1658062602895}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "cdcd3015-5b54-41c4-90df-385df58d1813-attachment.attach"}, {"name": "响应头", "source": "0df90e27-81af-4a2a-9634-97b8b31c3b72-attachment.attach"}, {"name": "响应文本", "source": "b1ed721e-8606-48b1-bb92-8ffcfd46ccda-attachment.attach"}], "start": 1658062602895, "stop": 1658062602896}, {"name": "断言", "status": "passed", "attachments": [{"name": "预期响应状态码", "source": "456b309d-85d6-4034-9e8f-3ed4f70923a2-attachment.attach"}, {"name": "预期返回错误码 status", "source": "40ce65fe-960f-4998-aa7d-78add490ade2-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "d82bf373-4277-44fe-82f5-a6fde2cd492f-attachment.attach"}], "start": 1658062602896, "stop": 1658062602896}], "start": 1658062602785, "stop": 1658062602909}, {"name": "请求接口：mregist", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/SceneRequestUtil.py\", line 76, in yamlAndRequest\n    dict['validate']['msg'])\n  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 103, in assertResult\n    assert result.json()['status'] == int(errorCode)\n"}, "steps": [{"name": "发生请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "03af2a90-d38c-4eb5-a5d8-5b85b29830df-attachment.attach"}, {"name": "请求方式", "source": "6f95f978-601d-4c9f-8af4-19a2b3847328-attachment.attach"}, {"name": "请求头", "source": "c6f5488d-d16e-4d4f-81bb-0b9d17dbfa29-attachment.attach"}, {"name": "请求体", "source": "bfab36ae-bc6e-40b3-a131-9470e01da4fd-attachment.attach"}], "start": 1658062603068, "stop": 1658062603069}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "ea08127b-7e73-4d36-a176-7d827a9e5bc9-attachment.attach"}, {"name": "响应头", "source": "6bd0bf01-6a08-418e-9182-b8a09e046bbd-attachment.attach"}, {"name": "响应文本", "source": "582e4c88-5017-4694-9853-479186542a2c-attachment.attach"}], "start": 1658062603069, "stop": 1658062603069}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/xiabo/SoftwareTest/carbonPy/CarbonApi_platform/utils/requestUtil.py\", line 103, in assertResult\n    assert result.json()['status'] == int(errorCode)\n"}, "attachments": [{"name": "预期响应状态码", "source": "faef3549-ffe0-49bc-b2e2-56918af90eb1-attachment.attach"}, {"name": "预期返回错误码 status", "source": "e945203f-ead2-4212-85f8-5505b098894a-attachment.attach"}, {"name": "预期返回错误信息msg", "source": "af046f21-a338-4c53-9239-d66a2472a59d-attachment.attach"}], "start": 1658062603069, "stop": 1658062603069}], "start": 1658062602909, "stop": 1658062603070}], "start": 1658062602781, "stop": 1658062603070, "uuid": "2b623b7f-07ab-42c7-98a8-75f3139892a3", "historyId": "fd829e5902ac878cab70e5d85f09e59c", "testCaseId": "eb37af781c52139cdd067a3f8044335d", "fullName": "test_cases.test_scene.TestScene#test_scene_02", "labels": [{"name": "story", "value": "场景测试02"}, {"name": "feature", "value": "场景"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_scene"}, {"name": "subSuite", "value": "TestScene"}, {"name": "host", "value": "xiabodeMacBook-Air.local"}, {"name": "thread", "value": "8322-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_scene"}]}